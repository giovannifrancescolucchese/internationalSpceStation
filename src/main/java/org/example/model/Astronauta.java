package org.example.model;

import lombok.AllArgsConstructor;
import lombok.Data;
import org.example.enums.AgenziaSpaziale;
import org.example.enums.CompitoAstronauta;
import org.example.enums.Nazionalita;

import java.time.LocalDate;
import java.util.List;

/**
 * Represents an astronaut with various personal and professional details.
 * This class uses Lombok to automatically generate boilerplate code like getters,
 * setters, and constructors. It simplifies the creation and maintenance of the Astronauta class.
 */
@Data // Generates getters, setters, equals, hashCode, and toString methods
@AllArgsConstructor // Generates a constructor with parameters for all fields
public class Astronauta {
    // Astronaut's first name
    private String nome;
    // Astronaut's last name
    private String cognome;
    // Astronaut's birth date
    private LocalDate birthDate;
    // A list of tasks the astronaut is responsible for
    private List<CompitoAstronauta> compito;
    // Astronaut's gender represented as a Character ('M', 'F', etc.)
    private Character sesso;
    // Astronaut's nationality
    private Nazionalita nazionalita;
    // The space agency the astronaut works for
    private AgenziaSpaziale agenziaSpaziale;
    // List of life parameters (e.g. health stats) for the astronaut
    List<LifeParameter> lifeParameters;

    // Note: With Lombok annotations, explicit constructors, getters, and setters are not required here.
    // Similarly, equals(), hashCode(), and toString() methods are also generated by Lombok.
}